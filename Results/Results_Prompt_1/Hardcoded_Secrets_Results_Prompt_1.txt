--- LLM Response ---
ANALYSIS RESULT FOR: Hardcoded secrets

Analyzed services with security smell:
 - customer-core
 - customer-management-backend
 - customer-self-service-backend
 - policy-management-backend
 - risk-management-server

/LakesideMutual/customer-core/src/main/java/com/lakesidemutual/customercore/interfaces/configuration/WebSecurityConfiguration.java
```java
@Value("${apikey.validkeys}")
    private String apiKeyValidKeys;

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        final List<String> validAPIKeys = Arrays.asList(apiKeyValidKeys.split(";"));
        final APIKeyAuthFilter filter = new APIKeyAuthFilter(apiKeyHeader);
        filter.setAuthenticationManager(new APIKeyAuthenticationManager(validAPIKeys));
```
Explanation: The apiKeyValidKeys are being injected from configuration, which might be hardcoded in property files. It's better to use a secrets management solution.

/LakesideMutual/customer-management-backend/src/main/resources/application.properties
```
apikey.header=Authorization
# API keys should not be hardcoded in a real application but injected by the
# container or managed in a data store. We provide it here for convenience:
apikey.value=9b93ebe19e16bbbd
```
Explanation: The API key is hardcoded in the application.properties file.

/LakesideMutual/customer-self-service-backend/src/main/resources/application.properties
```
apikey.header=Authorization
# API keys should not be hardcoded in a real application but injected by the
# container or managed in a data store. We provide it here for convenience:
apikey.value=b318ad736c6c844b

spring.activemq.user=queueuser
spring.activemq.password=secret
```
Explanation: The API key and the ActiveMQ credentials are hardcoded in the application.properties file.

/LakesideMutual/policy-management-backend/src/main/resources/application.properties
```
apikey.header=Authorization
# API keys should not be hardcoded in a real application but injected by the
# container or managed in a data store. We provide it here for convenience:
apikey.value=999ab497f8ec1052

spring.datasource.username = sa
spring.datasource.password = sa
```
Explanation: The API key and the database credentials are hardcoded in the application.properties file.

/LakesideMutual/risk-management-server/config.json
```json
{
  "activemq": {
    "host": "localhost",
    "port": 61613,
    "username": "queueuser",
    "password": "secret",
    "queueName": "newpolicies"
  },
  "grpc": {
    "host": "0.0.0.0",
    "port": 50051
  }
}
```
Explanation: The ActiveMQ credentials ("queueuser", "secret") are hardcoded in the config.json file.

--- Evaluation ---
Precision: 0.80, Recall: 1.00, F1: 0.89

